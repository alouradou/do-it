---
layout: layout/post.njk

title: "POK de la promo 2024-2025"
tags: ['index']
---

{% set promo = "2024-2025" %}

<div class="my-3 px-2 p-1 border-solid border-2 rounded relative">
    <div class="text-3xl mb-3">
        Par auteurs
    </div>
    <ul class="flex flex-wrap not-prose list-none my-1 mx-0 px-1 gap-1">
        {% set types = [promo] %}
        {% set types = (types.push('POK'), types) %}

        {% for cours in collections.index | sort | reverse %}
            {% set c = 0 %}
            {% for tag in cours.data.tags %}
                {% for type in types %}
                    {% if tag == type %}
                        {% set c = c + 1 %}
                    {% endif %}
                {% endfor %}
            {% endfor %}
            {% if c == types.length %}
                <li class="relative rounded-full border-purple-200 border-2 py-2 px-4 m-1  flex items-center">
                    <svg class="h-4 mr-3 fill-purple-700" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!--!Font Awesome Free 6.6.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d="M224 256A128 128 0 1 0 224 0a128 128 0 1 0 0 256zm-45.7 48C79.8 304 0 383.8 0 482.3C0 498.7 13.3 512 29.7 512l388.6 0c16.4 0 29.7-13.3 29.7-29.7C448 383.8 368.2 304 269.7 304l-91.4 0z"/></svg>
                    <a href="{{ cours.url  }}">{{cours.data.authors}}</a>
                </li>

            {% endif %}
        {% endfor %}
    </ul>
</div>

{% for temps in[1, 2, 3] %}
    <div class="my-3 px-2 p-1 border-solid border-2 rounded relative" id="temps-{{ temps }}">
        <div>
            <span class="text-3xl mb-3 mr-auto">Temps {{ temps }}</span>
            <button id="filter-unread-{{ temps }}" class="bg-neutral-200 rounded-full px-3">Masquer les POK lus</button>
        </div>
        <ul class="grid md:grid-cols-2 not-prose list-none my-1 mx-0 px-1 gap-1">
            {% set types = [promo] %}
            {% set types = (types.push('temps ' + temps), types) %}

            {% for cours in collections.POK | sort %}
                {% set c = 0 %}
                {% for tag in cours.data.tags %}
                    {% for type in types %}
                        {% if tag == type %}
                            {% set c = c + 1 %}
                        {% endif %}
                    {% endfor %}
                {% endfor %}
                {% if c == types.length %}
                    <li class="article-item cursor-pointer m-3 p-3 border-solid border-2 hover:border-purple-200 rounded relative flex flex-col" id="{{ cours.url }}">
                        <div class="text-xl mb-3 mr-20">
                            <a href="{{ cours.url  }}">{{cours.data.title}}</a>
                        </div>
                        {% if cours.data.résumé %}
                            <span class="h-full">{{ cours.data.résumé }}</span>
                        {% else %}
                            <span class="h-full"><i>MON de temps {{ temps }}.</i></span>
                        {% endif %}
                        <div class="flex flex-wrap flex-row items-end not-prose list-none mt-3 mb-1 mx-0 px-1 gap-1">
                            <span class="bg-purple-200 rounded-full px-2">{{ cours.data.date | dateFormat("dd/MM/yyyy") }}</span>
                            <span class="bg-blue-200 rounded-full px-2">{{cours.data.authors}}</span>
                            <button class="toggle-viewed absolute top-0 right-0 bg-neutral-200 opacity-90 rounded-full px-2 mt-2 mr-2" data-id="{{ cours.url }}"></button>
                        </div>
                    </li>
                {% endif %}
            {% endfor %}
        </ul>
    </div>

    <script>
        let showRead{{ temps }} = true;

        const filterButton{{ temps }} = document.getElementById('filter-unread-{{ temps }}');

        filterButton{{ temps }}.addEventListener('click', function () {
            const articles = document.querySelectorAll('#temps-{{ temps }} .article-item');

            filterButton{{ temps }}.textContent = showRead{{ temps }} ? 'Afficher les POK lus' : 'Masquer les POK lus';

            if (!showRead{{ temps }}) {
                showRead{{ temps }} = true;
                articles.forEach(article => {
                    article.style.display = 'block'; // Afficher tous les articles
                });
            }
            else {
                showRead{{ temps }} = false;
                articles.forEach(article => {
                    const articleId = article.getAttribute('id');
                    const isViewed = localStorage.getItem(articleId) === 'true';

                    if (isViewed) {
                        article.style.display = 'none'; // Masquer les articles vus
                    } else {
                        article.style.display = 'block'; // Afficher les articles non lus
                    }
                });
            }
        });
    </script>
{% endfor %}

<script>
    document.querySelectorAll('.toggle-viewed').forEach(button => {
    const articleId = button.getAttribute('data-id');
    const isViewed = localStorage.getItem(articleId) === 'true';

    button.textContent = isViewed ? '☑ Lu' : '☐ À lire';
    const parentCard = button.parentNode.parentElement;
    if (isViewed) {
        parentCard.classList.add("bg-neutral-100");
    }
    else {
         parentCard.classList.remove("bg-neutral-100");
    }

    // Applique le statut lu/non-lu à la card
    parentCard.addEventListener('click', function () {
        const currentStatus = localStorage.getItem(articleId) === 'true';
        localStorage.setItem(articleId, !currentStatus);
        button.textContent = !currentStatus ? '☑ Lu' : '☐ À lire';

        if (!currentStatus) {
            parentCard.classList.add("bg-neutral-100");
        }
        else {
            parentCard.classList.remove("bg-neutral-100");
        }
    });


  });
</script>
